# Generated by Django 5.1.6 on 2025-05-16 19:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('champion_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(default='Unknown', max_length=100)),
                ('role', models.CharField(blank=True, max_length=100)),
                ('image_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.CharField(max_length=100, unique=True)),
                ('date_played', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MatchChampion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kills', models.PositiveIntegerField(default=0)),
                ('deaths', models.PositiveIntegerField(default=0)),
                ('assists', models.PositiveIntegerField(default=0)),
                ('champion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lol_app.champion')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lol_app.match')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='champions',
            field=models.ManyToManyField(through='lol_app.MatchChampion', to='lol_app.champion'),
        ),
        migrations.CreateModel(
            name='UserLOL',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('main', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mained_by', to='lol_app.champion')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('body', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_written', to=settings.AUTH_USER_MODEL)),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='lol_app.match')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to='lol_app.userlol')),
            ],
        ),
        migrations.AddField(
            model_name='matchchampion',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lol_app.userlol'),
        ),
        migrations.AddField(
            model_name='match',
            name='players',
            field=models.ManyToManyField(related_name='matches', through='lol_app.MatchChampion', to='lol_app.userlol'),
        ),
        migrations.AlterUniqueTogether(
            name='matchchampion',
            unique_together={('match', 'champion'), ('match', 'player')},
        ),
    ]
